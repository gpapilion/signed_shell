#!/bin/bash
# simple wrapper script that verifies applications are signed by trusted
# parties

#default GPG_OPTIONS
GPG_VERIFY_OPTIONS=""
GPG_DECRYPT_OPTIONS=""

# Find default GPG, or hardcode if its not in path

if ! GPG=$(which gpg); then
	GPG=/usr/bin/gpg
fi

# Handles input from stdin :)
if [ ! -t 0 ]; then
	script=$(mktemp)
	# TODO:Remove tmp script
	while read line; do
		echo "$line" >> $script
	done
	command=$script
else
	if test -n "$1"; then
		command=$1
		shift
	else
		echo "Error: requires script name"
		exit 1
	fi
fi

# lets make sure this looks right
if ${GPG} ${GPG_VERIFY_OPTIONS} --verify "${command}" 2>/dev/null; then
	# concatting the string of arguments into a command string
	while (( $# )); do
		if test -z "${command_string}"; then
			command_string=("${1}")
		else
			command_string+=("${1}")
		fi
  		shift
	done

  tmp_file=$(mktemp)

  ${GPG} ${GPG_DECRYPT_OPTIONS} -q --decrypt $command 2>/dev/null 1>$tmp_file

  if test $? -ne 0; then
	  echo "Failed to verify on decrypt"
	  exit 1
  fi

  chmod 500 $tmp_file
  $tmp_file "${command_string[@]}"

else
	echo "Error: Not signed by trusted party"
fi

if test -e $tmp_file; then
	rm -rf $tmp_file
fi
